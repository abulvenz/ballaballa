{"mappings":"AAAAA,SAASC,KAAKC,OAASC,IAEnBC,QAAQC,IAAI,UAEZ,MAAMC,EAASN,SAASO,eAAe,SACjCC,EAAMF,EAAOG,WAAW,MAE9BH,EAAOI,MAAQC,WACfL,EAAOM,OAASC,YAEhBL,EAAIM,UAAY,QAChBN,EAAIO,SAAS,EAAG,EAAGJ,WAAYE,aAC/BL,EAAIQ,YAAc,QAClBR,EAAIS,WAAW,cAAe,IAAK,IAAK,KAKT,GAA3BC,UAAUC,cACVC,KAAO,uBAEPA,KAAO,2BAGXpB,SAASO,eAAe,QAAQc,UAAYD,KAEnB,mBAAdE,UACPtB,SAASO,eAAe,QAAQc,UAAY,iBAE5CrB,SAASO,eAAe,QAAQc,UAAY,oBAI5CE,OAAOC,qBACPxB,SAASO,eAAe,QAAQc,WAAa,oBAIjD,IAAII,EAAgB,KAiBpB,IACIA,EAAgB,IAAIC,cAAc,CAAEC,eAAgB,WACpDF,EAAcG,iBAAiB,SAASC,IAEX,oBAArBA,EAAMC,MAAMC,MAEgB,qBAArBF,EAAMC,MAAMC,MACnB3B,QAAQC,IAAI,oCAKpBoB,EAAcG,iBAAiB,WAAWzB,IACtCC,QAAQC,IAAI,mCAAqC2B,UAAUC,GAC3D7B,QAAQC,IAAI,mCAAqC2B,UAAUE,GAC3D9B,QAAQC,IAAI,mCAAqC2B,UAAUG,MAE/DV,EAAcG,iBAAiB,SAASC,IACpCzB,QAAQC,IAAIwB,EAAMC,MAAMC,KAAMF,EAAMC,MAAMM,YAI9CX,EAAcY,QAChB,MAAOP,GAEL,GAAmB,kBAAfA,EAAMC,KAEN3B,QAAQC,IAAI,4DACT,CAAA,GAAmB,mBAAfyB,EAAMC,KAGb,MAAMD,EAFN1B,QAAQC,IAAI,iDAQxBL,SAASC,KAAK2B,iBAAiB,QAASzB,IACpCC,QAAQC,IAAI,SAGhBD,QAAQC,IAAI","sources":["main.js"],"sourcesContent":["document.body.onload = e => {\n\n    console.log(\"loaded\")\n\n    const canvas = document.getElementById(\"field\");\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = innerWidth;\n    canvas.height = innerHeight;\n\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, innerWidth, innerHeight);\n    ctx.strokeStyle = \"wheat\";\n    ctx.strokeText(\"Nothing yet\", 100, 100, 200);\n    /*    navigator.permissions.query({ name: \"accelerometer\" }).then(v => {}, e => {\n            console.log(e)\n        });*/\n\n    if (navigator.cookieEnabled == true) {\n        text = \"Cookies are enabled.\";\n    } else {\n        text = \"Cookies are not enabled.\";\n    }\n\n    document.getElementById(\"demo\").innerHTML = text;\n\n    if (typeof Gyroscope === \"function\") {\n        document.getElementById(\"demo\").innerHTML = \"Gyros detected\";\n    } else {\n        document.getElementById(\"demo\").innerHTML = \"No Gyros detected\";\n    }\n\n\n    if (window.AmbientLightSensor) {\n        document.getElementById(\"demo\").innerHTML += \"Ambient detected\";\n    }\n\n\n    let accelerometer = null;\n\n    const console_log = (...t) => {\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, 0, innerWidth, innerHeight);\n        ctx.strokeStyle = \"wheat\";\n        ctx.strokeText(t.join(\", \"), 100, 100, 200);\n    };\n    const reloadOnShake = function(accelerometer) {\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, 0, innerWidth, innerHeight);\n        ctx.strokeStyle = \"wheat\";\n        ctx.strokeText(\"Nothing yet\", 100, 100, 200);\n    };\n\n\n    try {\n        accelerometer = new Accelerometer({ referenceFrame: 'device' });\n        accelerometer.addEventListener('error', event => {\n            // Handle runtime errors.\n            if (event.error.name === 'NotAllowedError') {\n                // Branch to code for requesting permission.\n            } else if (event.error.name === 'NotReadableError') {\n                console.log('Cannot connect to the sensor.');\n            }\n        });\n\n\n        accelerometer.addEventListener('reading', e => {\n            console.log(\"Magnetic field along the X-axis \" + magSensor.x);\n            console.log(\"Magnetic field along the Y-axis \" + magSensor.y);\n            console.log(\"Magnetic field along the Z-axis \" + magSensor.z);\n        })\n        accelerometer.addEventListener('error', event => {\n            console.log(event.error.name, event.error.message);\n        })\n\n        // accelerometer.addEventListener('reading', () => reloadOnShake(accelerometer));\n        accelerometer.start();\n    } catch (error) {\n        // Handle construction errors.\n        if (error.name === 'SecurityError') {\n            // See the note above about feature policy.\n            console.log('Sensor construction was blocked by a feature policy.');\n        } else if (error.name === 'ReferenceError') {\n            console.log('Sensor is not supported by the User Agent.');\n        } else {\n            throw error;\n        }\n    }\n\n};\n\ndocument.body.addEventListener(\"load\", (e) => {\n    console.log(\"ee\");\n});\n\nconsole.log(\"Neu2\")"],"names":["document","body","onload","e","console","log","canvas","getElementById","ctx","getContext","width","innerWidth","height","innerHeight","fillStyle","fillRect","strokeStyle","strokeText","navigator","cookieEnabled","text","innerHTML","Gyroscope","window","AmbientLightSensor","accelerometer","Accelerometer","referenceFrame","addEventListener","event","error","name","magSensor","x","y","z","message","start"],"version":3,"file":"index.01ea686e.js.map"}