{"mappings":"SAyBSA,eACL,IAAIC,EAAO,GAGPA,EAD2B,GAA3BC,UAAUC,cACH,uBAEA,2BAEXC,SAASC,eAAe,QAAQC,UAAYL,EAjChDG,SAASG,KAAKC,OAASC,IAEnBC,QAAQC,IAAI,UAEZ,MAAMC,EAASR,SAASC,eAAe,SACjCQ,EAAMD,EAAOE,WAAW,MAE9BF,EAAOG,MAAQC,WACfJ,EAAOK,OAASC,YAEhBL,EAAIM,UAAY,QAChBN,EAAIO,SAAS,EAAG,EAAGJ,WAAYE,aAC/BL,EAAIQ,WAAW,GAAI,IAAK,IAAK,KAC7BnB,UAAUoB,YAAYC,MAAM,CAAEC,KAAM,KAAMC,MAAKC,QAASC,IACpDjB,QAAQC,IAAIgB,OAKpBvB,SAASG,KAAKqB,iBAAiB,QAASD,IACpCjB,QAAQC,IAAI,SAGhBD,QAAQC,IAAI,QAea,mBAAdkB,UACPzB,SAASC,eAAe,QAAQC,UAAY,iBAE5CF,SAASC,eAAe,QAAQC,UAAY,oBAI5CwB,OAAOC,qBACP3B,SAASC,eAAe,QAAQC,WAAa,oBAGjD,IAAI0B,cAAgB,KACpB,IACIA,cAAgB,IAAIC,cAAc,CAAEC,eAAgB,WACpDF,cAAcJ,iBAAiB,SAASO,IAEX,oBAArBA,EAAMC,MAAMZ,MAEgB,qBAArBW,EAAMC,MAAMZ,MACnBd,QAAQC,IAAI,oCAGpBqB,cAAcJ,iBAAiB,WAAS,IAAQS,cAAcL,iBAC9DA,cAAcM,QAChB,MAAOF,GAEL,GAAmB,kBAAfA,EAAMZ,KAENd,QAAQC,IAAI,4DACT,CAAA,GAAmB,mBAAfyB,EAAMZ,KAGb,MAAMY,EAFN1B,QAAQC,IAAI","sources":["main.js"],"sourcesContent":["document.body.onload = e => {\n\n    console.log(\"loaded\")\n\n    const canvas = document.getElementById(\"field\");\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = innerWidth;\n    canvas.height = innerHeight;\n\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, innerWidth, innerHeight);\n    ctx.strokeText(\"\", 100, 100, 200);\n    navigator.permissions.query({ name: \"\" }).then(v => {}, e => {\n        console.log(e)\n    });\n\n};\n\ndocument.body.addEventListener(\"load\", (e) => {\n    console.log(\"ee\");\n});\n\nconsole.log(\"Neu2\")\n\nfunction checkCookies() {\n    var text = \"\";\n\n    if (navigator.cookieEnabled == true) {\n        text = \"Cookies are enabled.\";\n    } else {\n        text = \"Cookies are not enabled.\";\n    }\n    document.getElementById(\"demo\").innerHTML = text;\n}\n\n//document.body.onload = checkCookies\n\nif (typeof Gyroscope === \"function\") {\n    document.getElementById(\"demo\").innerHTML = \"Gyros detected\";\n} else {\n    document.getElementById(\"demo\").innerHTML = \"No Gyros detected\";\n}\n\n\nif (window.AmbientLightSensor) {\n    document.getElementById(\"demo\").innerHTML += \"Ambient detected\";\n}\n\nlet accelerometer = null;\ntry {\n    accelerometer = new Accelerometer({ referenceFrame: 'device' });\n    accelerometer.addEventListener('error', event => {\n        // Handle runtime errors.\n        if (event.error.name === 'NotAllowedError') {\n            // Branch to code for requesting permission.\n        } else if (event.error.name === 'NotReadableError') {\n            console.log('Cannot connect to the sensor.');\n        }\n    });\n    accelerometer.addEventListener('reading', () => reloadOnShake(accelerometer));\n    accelerometer.start();\n} catch (error) {\n    // Handle construction errors.\n    if (error.name === 'SecurityError') {\n        // See the note above about feature policy.\n        console.log('Sensor construction was blocked by a feature policy.');\n    } else if (error.name === 'ReferenceError') {\n        console.log('Sensor is not supported by the User Agent.');\n    } else {\n        throw error;\n    }\n}"],"names":["checkCookies","text","navigator","cookieEnabled","document","getElementById","innerHTML","body","onload","e1","console","log","canvas","ctx","getContext","width","innerWidth","height","innerHeight","fillStyle","fillRect","strokeText","permissions","query","name","then","v","e","addEventListener","Gyroscope","window","AmbientLightSensor","accelerometer","Accelerometer","referenceFrame","event","error","reloadOnShake","start"],"version":3,"file":"index.dae366dc.js.map"}